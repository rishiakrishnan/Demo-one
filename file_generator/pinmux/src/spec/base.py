from spec.interfaces import Pinouts

from spec.ifaceprint import display, display_fns, check_functions
from spec.ifaceprint import display_fixed


class PinSpec(Pinouts):
    def __init__(self, pinbanks, fixedpins, function_names):
        self.pinbanks = pinbanks
        self.fixedpins = fixedpins
        self.function_names = function_names
        bankspec = {}
        self.offs = 0
        pkeys = sorted(pinbanks.keys())
        for kn in pkeys:
            bankspec[kn] = self.offs
            self.offs += pinbanks[kn]

        self.scenarios = []

        Pinouts.__init__(self, bankspec)

    def add_scenario(self, name, needed, eint, pwm, descriptions):
        # Scenarios below can be spec'd out as either "find first interface"
        # by name/number e.g. SPI0, or as "find in bank/mux" which must be
        # spec'd as "BM:Name" where B is bank (A-F), M is Mux (0-3)
        # EINT and PWM are grouped together, specially, but may still be spec'd
        # using "BM:Name".  Pins are removed in-order as listed from
        # lists (interfaces, EINTs, PWMs) from available pins.

        self.scenarios.append((name, needed, eint, pwm, descriptions))

    def write(self, of):
        of.write("""# Pinouts (PinMux)
auto-generated by [[pinouts.py]]

[[!toc  ]]

""")
        display(of, self)

        of.write("\n# Pinouts (Fixed function)\n\n")
        fixedpins = display_fixed(of, self.fixedpins, len(self))

        of.write("""# Functions (PinMux)

auto-generated by [[pinouts.py]]

""")
        fns = display_fns(of, self.bankspec, self, self.function_names)
        of.write('\n')

        for scenario in self.scenarios:
            name, needed, eint, pwm, descriptions = scenario
            unused_pins = check_functions(of, name, self.bankspec, fns,
                                          self,
                                          needed, eint, pwm,
                                          descriptions)

        of.write("""# Reference Datasheets

datasheets and pinout links
* <http://datasheets.chipdb.org/AMD/8018x/80186/amd-80186.pdf>
* <http://hands.com/~lkcl/eoma/shenzen/frida/FRD144A2701.pdf>
* <http://pinouts.ru/Memory/sdcard_pinout.shtml>
* p8 <http://www.onfi.org/~/media/onfi/specs/onfi_2_0_gold.pdf?la=en>
* <https://www.heyrick.co.uk/blog/files/datasheets/dm9000aep.pdf>
* <http://cache.freescale.com/files/microcontrollers/doc/app_note/AN4393.pdf>
* <https://www.nxp.com/docs/en/data-sheet/MCF54418.pdf>
* ULPI OTG PHY, ST <http://www.st.com/en/interfaces-and-transceivers/stulpi01a.html>
* ULPI OTG PHY, TI TUSB1210 <http://ti.com/product/TUSB1210/>

""")

        return self, self.bankspec, self.pinbanks, fixedpins
